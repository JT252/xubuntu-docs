<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % xubuntu-common SYSTEM "../../libs-common/xubuntu-common.ent">
%xubuntu-common;
<!ENTITY % xubuntu-contributor SYSTEM "../libs/xubuntu-contributor.ent">
%xubuntu-contributor;
<!ENTITY % xinclude SYSTEM "../../libs-common/xinclude.mod">
%xinclude;
<!ENTITY language "&EnglishAmerican;">
<!ENTITY language "C">
]>
<sect1 id="qa-testing">
	<title>Package and ISO Testing</title>
	<section id="qa-testing-iso">
		<title>ISOs</title>

		<para>In general, links for specific ISOs for daily or milestone use can be found at the <ulink url="http://iso.qa.ubuntu.com/">ISO Tracker</ulink>. A link exists for the <ulink url="http://cdimage.ubuntu.com/xubuntu/daily-live/current/">current</ulink> development daily ISO. This can be useful, especially when setting up methods to download your testing ISO, such as with <ulink url="https://help.ubuntu.com/community/ZsyncCdImage">zsync</ulink></para>

		<note><para>You can find the last known boot and installation status of our ISOs at <ulink url="http://dev.xubuntu.org/#tab-qa">QA Status</ulink> of the development status tracker</para></note>
	</section>

	<section id="qa-testing-exploratory">
		<title>Exploratory Testing</title>

		<para>In addition to testing the images and software with predefined testing actions (static testing), community members can take part in exploratory testing as well.</para>

		<para>In essence, exploratory testing means running the development release and doing your daily tasks with the system and finally, filing bugs when you find them. This allows Xubuntu to get a much larger spread of testing than is possible with predefined tests.</para>

		<para>A useful way to deal with this is dual (or multiple) boots. By dual (or multiple) booting you can ensure you are able to access at all times a working version while testing the development system. In this way you can do as much work in the development release as is practical – all the while watching for bugs and regressions in the development release.</para>

		<para>Issues which the development team are keen to address include, in addition to normally reported issues, usability bugs, missing icons, inconsistent functionality.</para>
	</section>

	<section id="qa-testing-ppa">
		<title>Using Development PPAs</title>

		<para>We have 3 PPAs which we use regularly to test packages. These are:</para>

		<itemizedlist>
			<listitem><para><ulink url="https://launchpad.net/~shimmerproject/+archive/ubuntu/daily">Shimmer Themes</ulink> for daily builds of the Shimmer Project’s projects</para></listitem>
			<listitem><para><ulink url="https://launchpad.net/~xubuntu-dev/+archive/ubuntu/xubuntu-staging">Xubuntu Staging</ulink> for packages and package versions that are being prepared for inclusion in Xubuntu</para></listitem>
			<listitem><para><ulink url="https://launchpad.net/~xubuntu-dev/+archive/ubuntu/ppa">Xubuntu daily builds</ulink> for daily Git and Bzr builds for packages related to Xubuntu and/or Xfce4</para></listitem>
		</itemizedlist>

		<note><para>At times the development team use other PPAs to test specific packages. Details of these will be made known to testers when appropriate</para></note>

		<para>Installing these three PPAs means that you will be using and testing packages that developers are currently working with, this means that regressions found by you will not be present once they are released.</para>

		<para>Removing an in use PPA. Using ppa-purge causes apt to disable a PPA source list and then change affected packages back to the default versions.</para>

		<itemizedlist>
			<listitem><para>Run <userinput>sudo apt-get install ppa-purge</userinput></para></listitem>
			<listitem><para>Run <userinput>sudo ppa-purge ppa:ppaname</userinput></para></listitem>
		</itemizedlist>

		<para>Reporting bugs with PPAs can be problematic, please see further information on reporting bugs with PPAs in <xref linkend="qa-bugs-ppa" />.</para>
	</section>

	<section id="qa-testing-static">
		<title>Static Testing</title>

		<para>Testing the development versions of Xubuntu and packages in it helps keep up the every day quality. If you have spare hardware resources or are able to run a virtualized testing environment, you can help.</para>

		<itemizedlist>
			<listitem><para>Check the devel mailing list close to the start of the cycle, where the decision as to which milestones we will participate in will be discussed.</para></listitem>
			<listitem><para>While milestone testing is in progress, please watch for rebuilds. A rebuilt ISO will have <literal>.something</literal> appended to its name (e.g. <literal>.1</literal>). These will take place either when we have reason to rebuild, e.g. following a bug fix landing, or more likely when the Ubuntu Release Team have cause to do so.</para></listitem>
		</itemizedlist>
	</section>

	<section id="qa-testing-milestone">
		<title>Milestone Testing</title>

		<para>Stand alone image testing for milestones is useful in the 2 days before the release. To see how these milestones are scheduled, refer to the Ubuntu release schedule.</para>

		<itemizedlist>
			<listitem><para>Live Session: Boot with the image and ensure that basic application testing (open, close, saving etc.) passes.</para></listitem>
			<listitem><para>Installation tests required pass. These test only the installation.</para></listitem>
		</itemizedlist>
	</section>

	<section id="qa-testing-daily">
		<title>Daily Testing</title>

		<para>The importance of daily image testing lies in the main in knowing that boot or installation regressions haven’t appeared. Where it appears they have, if you are able to boot with a different flavours image, this can help prove a global or local to Xubuntu issue. If unsure contact the Xubuntu team, preferrably on IRC.</para>

		<itemizedlist>
			<listitem><para>Live Session: Boot with the image and ensure that basic application testing (open, close, saving etc.) passes.</para></listitem>
			<listitem><para>Installation tests required pass. These test only the installation.</para></listitem>
		</itemizedlist>
	</section>

	<section id="qa-testing-upgrade">
		<title>Upgrade Testing</title>

		<para>About half way through any development cycle (around the beta milestones) we need to test upgrades from the previous release to the new development version. When the development version is intended to be the next LTS release, we need to test both upgrade paths: LTS to LTS and regular to LTS.</para>

		<para>The ISO tracker has a section for upgrade tests which does not change daily, but runs from Friday to Friday. This enables us to test upgrades for a week rather than a day. During these tests it is preferred that the image used for testing is the one built on the first Friday, except where bugs are reported and fixes landed.</para>

		<itemizedlist>
			<listitem><para>Upgrade: tested using the update-manager</para></listitem>
			<listitem><para>Upgrade (image): tested using the daily image</para></listitem>
		</itemizedlist>
	</section>

	<section id="qa-testing-package">
		<title>Package Testing</title>

		<para>For releases where we are making use of the Package Tracker, calls for package testing will be made to the xubuntu-devel mailing list as required. This could be a call from QA or Developers.</para>

		<para>A schedule of planned tests will be mailed to the Xubuntu Devel mailing list close to the cycle start. Reminders of upcoming package test requirements are mailed to the Xubuntu devel mailing list as required. <emphasis>Specific developer testing requirement</emphasis> are mailed as they are available, often these packages will be those found on one of our PPAs.</para>
	</section>
</sect1>
